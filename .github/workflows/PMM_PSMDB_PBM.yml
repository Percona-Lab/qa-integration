name: PMM_PSMDB_PBM

on:
  workflow_dispatch:
    inputs:
      psmdb_version:
        description: "psmdb version"
        required: false
      pbm_version:
        description: "pbm version"
        required: false
      pmm_version:
        description: "pmm2-client version"
        required: false
      pmm_repo:
        description: "pmm2-client repo"
        required: false
      pmm_image:
        description: "pmm-server docker image"
        required: false

jobs:
  test_replica_set:
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    env:
      PSMDB_VERSION: ${{ github.event.inputs.psmdb_version || 'latest' }}
      PBM_VERSION: ${{ github.event.inputs.pbm_version || 'latest' }}
      PMM_CLIENT_VERSION: ${{ github.event.inputs.pmm_version || 'latest' }}
      PMM_REPO: ${{ github.event.inputs.pmm_repo || 'release' }}
      PMM_IMAGE: ${{ github.event.inputs.pmm_image || 'percona/pmm-server:latest' }}
    steps:
    - uses: actions/checkout@v2
    - name: test-rs
      run: |
        ./start-rs.sh
      working-directory: ./pmm_psmdb-pbm_setup

  test_sharded_cluster:
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    env:
      PSMDB_VERSION: ${{ github.event.inputs.psmdb_version || 'latest' }}
      PBM_VERSION: ${{ github.event.inputs.pbm_version || 'latest' }}
      PMM_CLIENT_VERSION: ${{ github.event.inputs.pmm_version || 'latest' }}
      PMM_REPO: ${{ github.event.inputs.pmm_repo || 'release' }}
      PMM_IMAGE: ${{ github.event.inputs.pmm_image || 'percona/pmm-server:latest' }}
    steps:
    - uses: actions/checkout@v2
    - name: test-sharded
      run: |
        ./start-sharded.sh
      working-directory: ./pmm_psmdb-pbm_setup

  test_diff_auth:
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    env:
      PSMDB_VERSION: ${{ github.event.inputs.psmdb_version || 'latest' }}
      PBM_VERSION: ${{ github.event.inputs.pbm_version || 'latest' }}
      PMM_CLIENT_VERSION: ${{ github.event.inputs.pmm_version || 'latest' }}
      PMM_REPO: ${{ github.event.inputs.pmm_repo || 'release' }}
      PMM_IMAGE: ${{ github.event.inputs.pmm_image || 'percona/pmm-server:latest' }}
    steps:
    - uses: KengoTODA/actions-setup-docker-compose@v1
      with:
       version: '2.17.2'
    - uses: actions/checkout@v3
    - name: test-auth
      run: |
        ./test-auth.sh
      working-directory: ./pmm_psmdb_diffauth_setup
