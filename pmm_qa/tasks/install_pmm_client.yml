- name: Get PMM server address
  shell: 'docker ps -f name=-server --format "{{ "{{" }}.Names{{ "}}" }}"'
  register: pmm_server_ip_output
  when: pmm_server_ip == "127.0.0.1"

- name: Set correct pmm server address
  set_fact:
    pmm_server_ip: "{{ pmm_server_ip_output.stdout }}"
  when: pmm_server_ip == "127.0.0.1"

- name: Print pmm server address
  debug:
    var: pmm_server_ip

- name: Copy a file into the container
  community.docker.docker_container_copy_into:
    container: "{{ container_name }}"
    path: ../pmm3-client-setup-centos.sh
    container_path: /pmm3-client-setup.sh

- name: "PMM Server IP is"
  debug:
    msg: "{{ pmm_server_ip }} is pmm server IP"

- name: Set correct pmm server port
  set_fact:
    pmm_server_port: 443
  when: pmm_server_ip is ansible.utils.ipv4

- name: Set correct pmm server port
  set_fact:
    pmm_server_port: 8443
  when: pmm_server_ip is not ansible.utils.ipv4

- name: Detect OS inside the container
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    command: cat /etc/os-release
  register: container_os_info

- name: Set distro family (debian/rhel)
  set_fact:
    distro_family: >-
      {{
        (
          'debian' if 'debian' in container_os_info.stdout | lower else
          'rhel' if 'rhel' in container_os_info.stdout | lower or 'centos' in container_os_info.stdout | lower or 'fedora' in container_os_info.stdout | lower
          else 'unknown'
        ) | trim
      }}

- name: Install wget inside Debian-family container
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    command: >
      sh -c '
      apt-get update &&
      apt-get install -y wget gnupg2 jq
      '
    user: "root"
  when: distro_family == "debian"

- name: Install wget on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    command: microdnf install -y wget gnupg2 jq
    user: "root"
  when: distro_family == "rhel"

- name: get lsb_release
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    command: lsb_release -sc
    user: "root"
    register: lsb_release

- name: Download percona release on debian based OS
  get_url:
    url: "https://repo.percona.com/apt/percona-release_latest.{{ lsb_release }}_all.deb"
    dest: "/percona-release_latest.{{ lsb_release }}_all.deb"
  when: distro_family == "debian"

- name: Download percona release on RHEL based OS
  get_url:
    url: "https://repo.percona.com/yum/percona-release-latest.noarch.rpm"
    dest: "/percona-release-latest.noarch.rpm"
  when: distro_family == "rhel"

- name: Print expected client version
  debug:
    msg: "{{ metrics_mode }}"

- name: Install pmm client experimental on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      sh -c '
        percona-release enable-only pmm3-client experimental &&
        apt-get update &&
        apt-get -y install pmm-client
      '
  when: distro_family == "debian" and client_version == "3-dev-latest"

- name: Install pmm client experimental on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      sh -c '
        percona-release enable-only pmm3-client experimental &&
        microdnf install -y pmm-client
      '
  when: distro_family == "rhel" and client_version == "3-dev-latest"

- name: Install pmm client testing on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      percona-release enable-only pmm3-client testing
      apt-get update
      apt-get -y install pmm-client
  when: distro_family == "debian" and client_version == "pmm3-rc"

- name: Install pmm client testing on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      percona-release enable-only pmm3-client testing
      microdnf install -y pmm-client
  when: distro_family == "rhel" and client_version == "pmm3-rc"

- name: Install pmm client testing on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      apt-get update
      apt-get -y install pmm-client
  when: distro_family == "debian" and client_version == "pmm3-latest"

- name: Install pmm client testing on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      microdnf install -y pmm-client
  when: distro_family == "rhel" and client_version == "pmm3-latest"

- name: Install specific PMM client version on Debian-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      sh -c '
        wget -O /pmm-client.deb https://repo.percona.com/pmm3-client/apt/pool/main/p/pmm-client/pmm-client_{{ client_version }}-7.$(lsb_release -sc)_amd64.deb &&
        dpkg -i /pmm-client.deb
      '
  when:
    - distro_family == 'debian'
    - client_version is match('^3\\.[0-9]+\\.[0-9]+$')

- name: Install specific PMM client version on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      sh -c '
        wget -O /pmm-client.rpm https://repo.percona.com/pmm3-client/yum/release/9/RPMS/x86_64/pmm-client-{{ client_version }}-7.el9.x86_64.rpm &&
        rpm -i /pmm-client.rpm
      '
  when:
    - distro_family == 'rhel'
    - client_version is match('^3\\.[0-9]+\\.[0-9]+$')

- name: Install tarball PMM client version on Debian-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      sh -c '
        wget -O /pmm-client.tar.gz "{{ client_version }}" &&
        dpkg -i /pmm-client.deb
      '
  when:
    - distro_family == 'debian'
    - client_version | regex_search('^https?://.*\\.tar\\.gz$') is not none

- name: Install tarball PMM client version on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      sh -c '
        wget -O /pmm-client.tar.gz "{{ client_version }}" &&
        tar -zxpf /pmm-client.tar.gz &&
        PMM_CLIENT=`ls -1td pmm-client* 2>/dev/null | grep -v ".tar" | grep -v ".sh" | head -n1` &&
        echo ${PMM_CLIENT} &&
        rm -rf pmm-client &&
        mv ${PMM_CLIENT} pmm-client &&
        rm -rf /usr/local/bin/pmm-client &&
        mv -f pmm-client /usr/local/bin &&
        pushd /usr/local/bin/pmm-client &&
        ## only setting up all binaries in default path /usr/local/percona/pmm &&
        bash -x ./install_tarball &&
        ln -sf /usr/local/percona/pmm/bin/pmm-admin /usr/local/bin/pmm-admin &&
        ln -sf /usr/local/percona/pmm/bin/pmm-agent /usr/local/bin/pmm-agent &&
        pwd &&
        popd &&
        pmm-admin --version
      '
  when:
    - distro_family == 'rhel'
    - client_version | regex_search('^https?://.*\\.tar\\.gz$') is not none

- name: Connect pmm client to pmm server using metrics mode
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: pmm-agent setup --config-file=/usr/local/percona/pmm/config/pmm-agent.yaml --server-address={{ pmm_server_ip }}:{{ pmm_server_port }} --server-insecure-tls --metrics-mode={{ metrics_mode }} --server-username=admin --server-password={{ admin_password }}
  when: metrics_mode | length > 0

- name: Connect pmm client to pmm server using metrics mode
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: pmm-agent setup --config-file=/usr/local/percona/pmm/config/pmm-agent.yaml --server-address={{ pmm_server_ip }}:{{ pmm_server_port }} --server-insecure-tls --server-username=admin --server-password={{ admin_password }}
  when: metrics_mode | length == 0

- name: Wait 5 seconds for connection to complete
  pause:
    seconds: 5

- name: Start pmm client
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      sh -c 'nohup pmm-agent --config-file=/usr/local/percona/pmm/config/pmm-agent.yaml > /var/log/pmm-agent.log 2>&1 &'

- name: Wait 5 seconds for start to complete
  pause:
    seconds: 5