- name: Get PMM server address
  shell: 'docker ps -f name=-server --format "{{ "{{" }}.Names{{ "}}" }}"'
  register: pmm_server_ip_output
  when: pmm_server_ip == "127.0.0.1"

- name: Set correct pmm server address
  set_fact:
    pmm_server_ip: "{{ pmm_server_ip_output.stdout }}"
  when: pmm_server_ip == "127.0.0.1"

- name: Print pmm server address
  debug:
    var: pmm_server_ip

- name: Copy a file into the container
  community.docker.docker_container_copy_into:
    container: "{{ container_name }}"
    path: ../pmm3-client-setup-centos.sh
    container_path: /pmm3-client-setup.sh

- name: "PMM Server IP is"
  debug:
    msg: "{{ pmm_server_ip }} is pmm server IP"

- name: Detect OS inside the container
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    command: cat /etc/os-release
  register: container_os_info

- name: Set distro family (debian/rhel)
  set_fact:
    distro_family: >-
      {{
        (
          'debian' if 'debian' in container_os_info.stdout | lower else
          'rhel' if 'rhel' in container_os_info.stdout | lower or 'centos' in container_os_info.stdout | lower or 'fedora' in container_os_info.stdout | lower
          else 'unknown'
        ) | trim
      }}

- name: Install wget inside Debian-family container
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    command: apt-get install -y wget gnupg2 jq
    user: "root"
  when: distro_family == "debian"

- name: Install wget on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    command: microdnf install -y wget gnupg2 jq
    user: "root"
  when: distro_family == "rhel"

- name: Download percona release on RHEL based OS
  get_url:
    url: "https://repo.percona.com/apt/percona-release_latest.$(lsb_release -sc)_all.deb"
    dest: "/percona-release_latest.$(lsb_release -sc)_all.deb"
  when: distro_family == "debian"

- name: Download percona release on RHEL based OS
  get_url:
    url: "https://repo.percona.com/yum/percona-release-latest.noarch.rpm"
    dest: "/percona-release-latest.noarch.rpm"
  when: distro_family == "rhel"

- name: Print expected client version
  debug:
    msg: "{{ client_version }}"

- name: Install pmm client experimental on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      percona-release enable-only pmm3-client experimental
      apt-get update
      apt-get -y install pmm-client
  when: distro_family == "debian" and client_version == "3-dev-latest"

- name: Install pmm client experimental on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      percona-release enable-only pmm3-client experimental
      microdnf install -y pmm-client
  when: distro_family == "rhel" and client_version == "3-dev-latest"

- name: Install pmm client testing on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      percona-release enable-only pmm3-client testing
      apt-get update
      apt-get -y install pmm-client
  when: distro_family == "debian" and client_version == "pmm3-rc"

- name: Install pmm client testing on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      percona-release enable-only pmm3-client testing
      microdnf install -y pmm-client
  when: distro_family == "rhel" and client_version == "pmm3-rc"

- name: Install pmm client testing on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      apt-get update
      apt-get -y install pmm-client
  when: distro_family == "debian" and client_version == "pmm3-latest"

- name: Install pmm client testing on RHEL-family containers
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: >
      microdnf install -y pmm-client
  when: distro_family == "rhel" and client_version == "pmm3-latest"

- name: Install pmm-client
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    user: "root"
    command: bash -x /pmm3-client-setup.sh --pmm_server_ip {{ pmm_server_ip }} --client_version {{ client_version }} --admin_password {{ admin_password }} --use_metrics_mode no