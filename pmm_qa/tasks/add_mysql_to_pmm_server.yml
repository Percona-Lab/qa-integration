- name: Display container name
  debug:
    var: container_name

- name: Install and add pmm client.
  include_tasks: ./install_pmm_client_centos.yml

- name: Install required software
  shell: apt-get install -y jq

- name: Verify that service with expected name is not connected to pmm server
  shell: |
    SERVICE_NAME="{{ container_name }}"
    echo "$SERVICE_NAME"
    curl -u admin:{{ admin_password }} --location 'http://{{ pmm_server_ip}}/v1/management/services' | jq -r '.services[].service_name' | grep -q $SERVICE_NAME
  register: service_exists_old
  ignore_errors: yes

- name: Display service name
  debug:
    var: service_exists_old.stdout

- name: Create a new service name that is not already connected to pmm server
  shell: |
    RANDOM_ID="_$(shuf -i 1-10000 -n 1)"
    SERVICE_NAME="{{ container_name }}$RANDOM_ID"
    echo "$SERVICE_NAME"
    curl -u admin:{{ admin_password }} --location 'http://{{ pmm_server_ip}}/v1/management/services' | jq -r '.services[].service_name' | grep -q $SERVICE_NAME
  register: service_exists_new
  ignore_errors: yes
  retries: 5
  until: service_exists_new.rc == 1
  when: service_exists_old.rc == 0

- name: Display service name
  debug:
    var: service_exists_new.stdout

- name: Set correct service name in pmm server
  set_fact:
    service_name: "{{ service_exists_new.stdout }}"
  when: service_exists_old.rc == 0

- name: Set correct service name in pmm server
  set_fact:
    service_name: "{{ service_exists_old.stdout }}"
  when: service_exists_new is not defined

- name: Add group replication service to pmm server
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    command: pmm-admin add mysql --query-source={{ query_source }} --username=root --password={{ root_password }} --environment=ps-gr-dev --cluster=ps-gr-dev-cluster --replication-set=ps-gr-replication {{ service_name }} --debug 127.0.0.1:3306
  when: setup_type == "gr"

- name: Add service to pmm server
  community.docker.docker_container_exec:
    container: "{{ container_name }}"
    command: pmm-admin add mysql --query-source={{ query_source }} --username=root --password={{ root_password }} --environment=ps-dev {{ service_name }} --debug 127.0.0.1:3306
  when: setup_type != "gr"
