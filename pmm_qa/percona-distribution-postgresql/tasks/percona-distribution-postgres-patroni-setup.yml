- name: Create Docker network
  community.docker.docker_network:
    name: "{{ network_name }}"
    state: present
  ignore_errors: yes

- name: Run etcd container
  community.docker.docker_container:
    name: etcd
    image: quay.io/coreos/etcd:v3.5
    restart_policy: always
    ports:
      - "2379:2379"
      - "2380:2380"
    command: >
      /usr/local/bin/etcd
      --name etcd1
      --data-dir /etcd-data
      --initial-advertise-peer-urls http://0.0.0.0:2380
      --listen-peer-urls http://0.0.0.0:2380
      --listen-client-urls http://0.0.0.0:2379
      --advertise-client-urls http://0.0.0.0:2379
      --initial-cluster etcd1=http://0.0.0.0:2380
      --initial-cluster-state new

- name: Create Patroni data volume
  community.docker.docker_volume:
    name: "patroni_pgdata"

- name: Run Patroni container
  community.docker.docker_container:
    name: "{{ inventory_hostname }}"
    image: ghcr.io/zalando/patroni:latest
    restart_policy: always
    volumes:
      - "{{ inventory_hostname }}_pgdata:/home/postgres/pgdata"
    ports:
      - "5432:5432"
    env:
      PATRONI_NAME: "patroni"
      PATRONI_SCOPE: patroni_cluster
      PATRONI_RESTAPI_LISTEN: 0.0.0.0:8008
      PATRONI_RESTAPI_CONNECT_ADDRESS: "patroni:8008"
      PATRONI_ETCD_HOSTS: "etcd:2379"
      PATRONI_POSTGRESQL_DATA_DIR: /home/postgres/pgdata
      PATRONI_POSTGRESQL_CONNECT_ADDRESS: "patroni:5432"
      PATRONI_POSTGRESQL_LISTEN: 0.0.0.0:5432
      PATRONI_SUPERUSER_USERNAME: postgres
      PATRONI_SUPERUSER_PASSWORD: password
      PATRONI_REPLICATION_USERNAME: replicator
      PATRONI_REPLICATION_PASSWORD: rep_pass