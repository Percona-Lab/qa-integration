- name: Set patroni container name variable
  set_fact:
    etcd_container_name: etcd_container

- name: Set correct nodes count for patroni setup
  set_fact:
    nodes_count: 3
- name: Remove old data folders
  shell: 'rm -fr {{ data_dir }}'

- name: Create data directories
  file:
    path: "{{ data_dir }}/node{{ item }}/data"
    state: directory
    mode: '0755'
  loop: "{{ range(1, nodes_count | int + 1) | list }}"

- name: Fix permissions on data directory
  become: true
  file:
    path: "{{ data_dir }}/node{{ item }}/data"
    owner: 1001
    group: 1001
    recurse: yes
  loop: "{{ range(1, nodes_count | int + 1) | list }}"

- name: Generate postgresqlX.yml
  template:
    src: data/postgresqlX.yml.j2
    dest: "{{ data_dir }}/node{{ item }}/postgresql{{ item }}.yml"
  loop: "{{ range(1, nodes_count | int + 1) | list }}"

- name: Generate etcd configuration
  template:
    src: data/etcd.conf.yaml.j2
    dest: "{{ data_dir }}/node{{ item }}/etcd.conf.yaml"
  loop: "{{ range(1, nodes_count | int + 1) | list }}"

- name: Generate patroni configuration
  template:
    src: data/patroni.yml.j2
    dest: "{{ data_dir }}/node{{ item }}/patroni.yml"
  loop: "{{ range(1, nodes_count | int + 1) | list }}"

- name: Create Docker network
  community.docker.docker_network:
    name: "{{ network_name }}"
    state: present
  ignore_errors: yes

- name: Prepare ETCD container
  include_tasks: prepare_etcd.yml

- name: Start PostgreSQL containers
  community.docker.docker_container:
    name: "pdpgsql_pmm_{{ pg_version }}_{{ item }}"
    image: "{{ docker_repo }}:{{ pg_version }}"
    restart_policy: always
    state: started
    recreate: true
    networks:
      - name: "{{ network_name }}"
    env:
      POSTGRES_PASSWORD: "{{ root_password }}"
    volumes:
      - "{{ data_dir }}/node{{ item }}/data:/data/db"
      - "{{ data_dir }}/node{{ item }}/etcd.conf.yaml:/etcd.conf.yaml:ro"
      - "{{ data_dir }}/node{{ item }}/patroni.yml:/etc/patroni/patroni.yml:ro"
    ports:
      - "{{ pdpgsql_port + item - 1 }}:5432"
  loop: "{{ range(1, nodes_count | int + 1) | list }}"

- name: Install required packages in Oracle Linux container
  community.docker.docker_container_exec:
    container: "pdpgsql_pmm_{{ pg_version }}_{{ item }}"
    user: root
    command: >
      /bin/sh -c '
        microdnf install -y dnf
        dnf install -y dnf-plugins-core
        dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
        dnf config-manager --set-enabled crb
        percona-release enable ppg-{{ pg_version }}
        dnf install -y python3-pip python3-devel binutils python3-click
        dnf install -y percona-patroni etcd python3-python-etcd percona-pgbackrest
        patroni --version
      '
  loop: "{{ range(1, nodes_count | int + 1) | list }}"


- name: Start etcd service
  community.docker.docker_container_exec:
    container: "pdpgsql_pmm_{{ pg_version }}_{{ item }}"
#    user: root
    command: >
      /bin/sh -c '
        touch /home/postgres/logs/etcd.log
        touch /home/postgres/logs/patroni.log
        nohup etcd --config-file /etcd.conf.yaml > /home/postgres/logs/etcd.log 2>&1 &
        nohup patroni /etc/patroni/patroni.yml > /home/postgres/logs/patroni.log 2>&1 &
      '
  loop: "{{ range(1, nodes_count | int + 1) | list }}"
