version: '3.7'

services:
  pmm-server:
    container_name: pmm-server-1
    image: ${DOCKER_VERSION:-perconalab/pmm-server:3-dev-latest}
    ports:
      - "1443:8443"
      - "8081:8080"
    environment:
      - PMM_DEBUG=1
    networks:
      - docker-client-check

  pmm-client:
    container_name: pmm-client-1
    image: ${CLIENT_DOCKER_VERSION:-perconalab/pmm-client:3-dev-latest}
    environment:
      - PMM_AGENT_SERVER_ADDRESS=pmm-server:8443
      - PMM_AGENT_SERVER_USERNAME=admin
      - PMM_AGENT_SERVER_PASSWORD=admin
      - PMM_AGENT_SERVER_INSECURE_TLS=1
      - PMM_AGENT_SETUP=1
      - PMM_AGENT_CONFIG_FILE=/usr/local/percona/pmm/config/pmm-agent.yaml
    depends_on:
      pmm-server:
        condition: service_healthy
    networks:
      - docker-client-check

  ps:
    container_name: ps-1
    image: percona:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=pmm
      - MYSQL_PASSWORD=pmm-pass
      - PMM_AGENT_SERVER_ADDRESS=pmm-server:8443
    ports:
      - "3309:3306"
    networks:
      - docker-client-check

  mongodb:
    container_name: psmdb-1
    image: mongo:7.0
    environment:
      - PMM_AGENT_SERVER_ADDRESS=pmm-server:8443
      - MONGO_INITDB_ROOT_USERNAME=pmm
      - MONGO_INITDB_ROOT_PASSWORD=pmm-pass
    ports:
      - "27037:27017"
    networks:
      - docker-client-check

  postgres:
    container_name: pdpgsql-1
    image: postgres:16
    environment:
      - POSTGRES_USER=pmm
      - POSTGRES_PASSWORD=pmm-pass
      - PMM_AGENT_SERVER_ADDRESS=pmm-server:8443
    ports:
      - "5432:5432"
    networks:
      - docker-client-check

networks:
  docker-client-check:
    driver: bridge
