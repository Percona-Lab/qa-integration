version: "3"
services:
  rs101:
    build:
      dockerfile: ./Dockerfile
      context: .
      args:
        - REPO=${REPO:-testing}
        - PBM_VERSION=${PBM_VERSION:-latest}
        - PSMDB_VERSION=${PSMDB_VERSION:-latest}
        - PMM_VERSION=${PMM_VERSION:-latest}
    volumes:
      - ./conf/pbm:/etc/pbm
      - ./conf/mongod-rs1:/etc/mongod
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    environment:
      - "PBM_MONGODB_URI=mongodb://127.0.0.1:27017"
      - "PMM_AGENT_SERVER_ADDRESS=pmm-server:443"
      - "PMM_AGENT_SERVER_USERNAME=admin"
      - "PMM_AGENT_SERVER_PASSWORD=password"
      - "PMM_AGENT_SERVER_INSECURE_TLS=1"
    container_name: rs101
    hostname: rs101
    networks:
      - test-network

  rs102:
    build:
      dockerfile: ./Dockerfile
      context: .
      args:
        - REPO=${REPO:-testing}
        - PBM_VERSION=${PBM_VERSION:-latest}
        - PSMDB_VERSION=${PSMDB_VERSION:-latest}
        - PMM_VERSION=${PMM_VERSION:-latest}
    volumes:
      - ./conf/pbm:/etc/pbm
      - ./conf/mongod-rs1:/etc/mongod
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    environment:
      - "PBM_MONGODB_URI=mongodb://127.0.0.1:27017"
      - "PMM_AGENT_SERVER_ADDRESS=pmm-server:443"
      - "PMM_AGENT_SERVER_USERNAME=admin"
      - "PMM_AGENT_SERVER_PASSWORD=password"
      - "PMM_AGENT_SERVER_INSECURE_TLS=1"
    container_name: rs102
    hostname: rs102
    networks:
      - test-network

  rs103:
    build:
      dockerfile: ./Dockerfile
      context: .
      args:
        - REPO=${REPO:-testing}
        - PBM_VERSION=${PBM_VERSION:-latest}
        - PSMDB_VERSION=${PSMDB_VERSION:-latest}
        - PMM_VERSION=${PMM_VERSION:-latest}
    volumes:
      - ./conf/pbm:/etc/pbm
      - ./conf/mongod-rs1:/etc/mongod
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    environment:
      - "PBM_MONGODB_URI=mongodb://127.0.0.1:27017"
      - "PMM_AGENT_SERVER_ADDRESS=pmm-server:443"
      - "PMM_AGENT_SERVER_USERNAME=admin"
      - "PMM_AGENT_SERVER_PASSWORD=password"
      - "PMM_AGENT_SERVER_INSECURE_TLS=1"
    container_name: rs103
    hostname: rs103
    networks:
      - test-network

  rs201:
    build:
      dockerfile: ./Dockerfile
      context: .
      args:
        - REPO=${REPO:-testing}
        - PBM_VERSION=${PBM_VERSION:-latest}
        - PSMDB_VERSION=${PSMDB_VERSION:-latest}
        - PMM_VERSION=${PMM_VERSION:-latest}
    volumes:
      - ./conf/pbm:/etc/pbm
      - ./conf/mongod-rs2:/etc/mongod
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    environment:
      - "PBM_MONGODB_URI=mongodb://127.0.0.1:27017"
      - "PMM_AGENT_SERVER_ADDRESS=pmm-server:443"
      - "PMM_AGENT_SERVER_USERNAME=admin"
      - "PMM_AGENT_SERVER_PASSWORD=password"
      - "PMM_AGENT_SERVER_INSECURE_TLS=1"
    container_name: rs201
    hostname: rs201
    networks:
      - test-network

  rs202:
    build:
      dockerfile: ./Dockerfile
      context: .
      args:
        - REPO=${REPO:-testing}
        - PBM_VERSION=${PBM_VERSION:-latest}
        - PSMDB_VERSION=${PSMDB_VERSION:-latest}
        - PMM_VERSION=${PMM_VERSION:-latest}
    volumes:
      - ./conf/pbm:/etc/pbm
      - ./conf/mongod-rs2:/etc/mongod
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    environment:
      - "PBM_MONGODB_URI=mongodb://127.0.0.1:27017"
      - "PMM_AGENT_SERVER_ADDRESS=pmm-server:443"
      - "PMM_AGENT_SERVER_USERNAME=admin"
      - "PMM_AGENT_SERVER_PASSWORD=password"
      - "PMM_AGENT_SERVER_INSECURE_TLS=1"
    container_name: rs202
    hostname: rs202
    networks:
      - test-network

  rs203:
    build:
      dockerfile: ./Dockerfile
      context: .
      args:
        - REPO=${REPO:-testing}
        - PBM_VERSION=${PBM_VERSION:-latest}
        - PSMDB_VERSION=${PSMDB_VERSION:-latest}
        - PMM_VERSION=${PMM_VERSION:-latest}
    volumes:
      - ./conf/pbm:/etc/pbm
      - ./conf/mongod-rs2:/etc/mongod
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    environment:
      - "PBM_MONGODB_URI=mongodb://127.0.0.1:27017"
      - "PMM_AGENT_SERVER_ADDRESS=pmm-server:443"
      - "PMM_AGENT_SERVER_USERNAME=admin"
      - "PMM_AGENT_SERVER_PASSWORD=password"
      - "PMM_AGENT_SERVER_INSECURE_TLS=1"
    container_name: rs203
    hostname: rs203
    networks:
      - test-network

  rscfg01:
    build:
      dockerfile: ./Dockerfile
      context: .
      args:
        - REPO=${REPO:-testing}
        - PBM_VERSION=${PBM_VERSION:-latest}
        - PSMDB_VERSION=${PSMDB_VERSION:-latest}
        - PMM_VERSION=${PMM_VERSION:-latest}
    volumes:
      - ./conf/pbm:/etc/pbm
      - ./conf/mongod-cfg:/etc/mongod
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    environment:
      - "PBM_MONGODB_URI=mongodb://127.0.0.1:27017"
      - "PMM_AGENT_SERVER_ADDRESS=pmm-server:443"
      - "PMM_AGENT_SERVER_USERNAME=admin"
      - "PMM_AGENT_SERVER_PASSWORD=password"
      - "PMM_AGENT_SERVER_INSECURE_TLS=1"
    container_name: rscfg01
    hostname: rscfg01
    networks:
      - test-network

  rscfg02:
    build:
      dockerfile: ./Dockerfile
      context: .
      args:
        - REPO=${REPO:-testing}
        - PBM_VERSION=${PBM_VERSION:-latest}
        - PSMDB_VERSION=${PSMDB_VERSION:-latest}
        - PMM_VERSION=${PMM_VERSION:-latest}
    volumes:
      - ./conf/pbm:/etc/pbm
      - ./conf/mongod-cfg:/etc/mongod
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    environment:
      - "PBM_MONGODB_URI=mongodb://127.0.0.1:27017"
      - "PMM_AGENT_SERVER_ADDRESS=pmm-server:443"
      - "PMM_AGENT_SERVER_USERNAME=admin"
      - "PMM_AGENT_SERVER_PASSWORD=password"
      - "PMM_AGENT_SERVER_INSECURE_TLS=1"
    container_name: rscfg02
    hostname: rscfg02
    networks:
      - test-network

  rscfg03:
    build:
      dockerfile: ./Dockerfile
      context: .
      args:
        - REPO=${REPO:-testing}
        - PBM_VERSION=${PBM_VERSION:-latest}
        - PSMDB_VERSION=${PSMDB_VERSION:-latest}
        - PMM_VERSION=${PMM_VERSION:-latest}
    volumes:
      - ./conf/pbm:/etc/pbm
      - ./conf/mongod-cfg:/etc/mongod
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    environment:
      - "PBM_MONGODB_URI=mongodb://127.0.0.1:27017"
      - "PMM_AGENT_SERVER_ADDRESS=pmm-server:443"
      - "PMM_AGENT_SERVER_USERNAME=admin"
      - "PMM_AGENT_SERVER_PASSWORD=password"
      - "PMM_AGENT_SERVER_INSECURE_TLS=1"
    container_name: rscfg03
    hostname: rscfg03
    networks:
      - test-network

  mongos:
    build:
      dockerfile: ./Dockerfile
      context: .
      args:
        - REPO=${REPO:-testing}
        - PBM_VERSION=${PBM_VERSION:-latest}
        - PSMDB_VERSION=${PSMDB_VERSION:-latest}
        - PMM_VERSION=${PMM_VERSION:-latest}
    container_name: mongos
    hostname: mongos
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - ./conf/datagen:/etc/datagen:ro
    privileged: true
    command: "mongos --configdb rscfg/rscfg01:27017,rscfg02:27017,rscfg03:27017 --port 27017 --bind_ip 0.0.0.0"
    networks:
      - test-network
    depends_on:
      - rscfg01
      - rscfg02
      - rscfg03

  cluster-init:
    image: percona/percona-server-mongodb
    restart: "no"
    container_name: cluster-init
    networks:
      - test-network
    depends_on:
      - mongos
    entrypoint: >
      bash -c "
      mongosh --host rs101:27017 --eval 'config = { \"_id\" : \"rs1\", \"members\" : [{ \"_id\" : 0, \"host\" : \"rs101:27017\" }, { \"_id\" : 1, \"host\" : \"rs102:27017\" }, { \"_id\" : 2, \"host\" : \"rs103:27017\" }]}; rs.initiate(config);' &&
      mongosh --host rs201:27017 --eval 'config = { \"_id\" : \"rs2\", \"members\" : [{ \"_id\" : 0, \"host\" : \"rs201:27017\" }, { \"_id\" : 1, \"host\" : \"rs202:27017\" }, { \"_id\" : 2, \"host\" : \"rs203:27017\" }]}; rs.initiate(config);' &&
      mongosh --host rscfg01:27017 --eval 'config = { \"_id\" : \"rscfg\", \"members\" : [{ \"_id\" : 0, \"host\" : \"rscfg01:27017\" }, { \"_id\" : 1, \"host\" : \"rscfg02:27017\" }, { \"_id\" : 2, \"host\" : \"rscfg03:27017\" }]}; rs.initiate(config);' &&      
      sleep 30 &&  
      mongosh --host mongos:27017 --eval 'sh.addShard( \"rs1/rs101:27017,rs102:27017,rs103:27017\" );' &&
      mongosh --host mongos:27017 --eval 'sh.addShard( \"rs2/rs201:27017,rs202:27017,rs203:27017\" );'
      "

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
    networks:
      - test-network
    volumes:
      - backups:/backups
    environment:
      - "MINIO_ACCESS_KEY=minio1234"
      - "MINIO_SECRET_KEY=minio1234"
    command: server /backups

  createbucket:
    container_name: createbucket 
    image: minio/mc
    networks:
      - test-network
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c " sleep 5; /usr/bin/mc config host add myminio http://minio:9000 minio1234 minio1234; /usr/bin/mc mb myminio/bcp; exit 0; "

  pmm-server:
    image: ${PMM_IMAGE:-perconalab/pmm-server:dev-latest}
    container_name: pmm-server
    environment:
      - "PMM_DEBUG=1"
      - "ENABLE_BACKUP_MANAGEMENT=1"
    ports:
      - "443:443"
      - "8081:80"
    networks:
      - test-network
    volumes:
      - pmm-server:/srv

  test:
    build:
      dockerfile: ./Dockerfile-testinfra
      context: .
    volumes:
      - ./test:/test
      - /var/run/docker.sock:/var/run/docker.sock:ro
    container_name: test
    hostname: test
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  pmm-server: null
  backups: null
